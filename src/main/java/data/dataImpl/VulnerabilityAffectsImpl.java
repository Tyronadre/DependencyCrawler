package data.dataImpl;

import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import data.Version;
import data.VulnerabilityAffects;
import enums.ComponentType;

import java.util.ArrayList;
import java.util.List;

public class VulnerabilityAffectsImpl implements VulnerabilityAffects {
    JsonObject data;

    public VulnerabilityAffectsImpl(JsonObject data) {
    }

    @Override
    public String getPackage() {
        return data.get("package").getAsJsonObject().get("purl").getAsString();
    }

    @Override
    public List<Version> getAllAffects() {
        var l = new ArrayList<Version>();
        for (var version : data.get("versions").getAsJsonArray()) {
            l.add(Version.of(ComponentType.UNKNOWN, version.getAsString()));
        }
        return l;
    }

    @Override
    public String getDatabaseSpecific() {
        return data.get("database_specific").getAsString();
    }

    @Override
    public Version getIntroduced() {
        var ranges = data.get("introduced").getAsJsonArray();
        for (JsonElement range : ranges) {
            var r = range.getAsJsonObject();
            if (r.get("type").getAsString().equals("ECOSYSTEM")) {
                var events = r.get("events").getAsJsonObject();
                if (events.has("introduced")) {
                    return Version.of(ComponentType.UNKNOWN, events.get("introduced").getAsString());
                }
            }
        }
        return null;
    }

    @Override
    public Version getFixed() {
        var ranges = data.get("fixed").getAsJsonArray();
        for (JsonElement range : ranges) {
            var r = range.getAsJsonObject();
            if (r.get("type").getAsString().equals("ECOSYSTEM")) {
                var events = r.get("events").getAsJsonObject();
                if (events.has("fixed")) {
                    return Version.of(ComponentType.UNKNOWN, events.get("fixed").getAsString());
                }
            }
        }
        return null;
    }
}
