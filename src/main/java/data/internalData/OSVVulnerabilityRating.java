package data.internalData;

import com.google.gson.JsonObject;
import data.Property;
import data.Vulnerability;
import data.VulnerabilityRating;
import org.metaeffekt.core.security.cvss.CvssVector;


public class OSVVulnerabilityRating implements VulnerabilityRating {
    Vulnerability vulnerability;
    JsonObject severity, database_specific;
    CvssVector cvss;
    String cvssVersion;

    public OSVVulnerabilityRating(Vulnerability vulnerability, JsonObject severity, JsonObject database_specific) {
        this.vulnerability = vulnerability;
        this.severity = severity;
        this.database_specific = database_specific;
        this.calculateCVSS();
    }

    private void calculateCVSS() {
        var cvssVector = severity.get("score").getAsString();
        var version = cvssVector.substring(0, cvssVector.indexOf("/"));
        cvss = CvssVector.parseVector(cvssVector);
    }

    @Override
    public Double getBaseScore() {
        return cvss.getBaseScore();
    }

    @Override
    public Double getImpactScore() {
        return cvss.getBakedScores().getImpactScore();
    }

    @Override
    public Double getExploitabilityScore() {
        return cvss.getBakedScores().getExploitabilityScore();
    }

    @Override
    public String getSeverity() {
        return database_specific.get("severity").getAsString();
    }

    @Override
    public String getMethod() {
        return cvssVersion;
    }

    @Override
    public String getVector() {
        return severity.get("score").getAsString();
    }

    @Override
    public Property getSource() {
        return null;
    }

    @Override
    public String getJustification() {
        return null;
    }


}
