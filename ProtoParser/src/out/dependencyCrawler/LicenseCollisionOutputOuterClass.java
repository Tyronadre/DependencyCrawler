// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: license-collision-output.proto
// Protobuf Java Version: 4.27.0-rc1

package dependencyCrawler;

public final class LicenseCollisionOutputOuterClass {
  private LicenseCollisionOutputOuterClass() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 27,
      /* patch= */ 0,
      /* suffix= */ "-rc1",
      LicenseCollisionOutputOuterClass.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface LicenseCollisionOutputOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dependencyCrawler.LicenseCollisionOutput)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The license collisions
     * </pre>
     *
     * <code>repeated .dependencyCrawler.LicenseCollision licenseCollisions = 1;</code>
     */
    java.util.List<dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollision> 
        getLicenseCollisionsList();
    /**
     * <pre>
     * The license collisions
     * </pre>
     *
     * <code>repeated .dependencyCrawler.LicenseCollision licenseCollisions = 1;</code>
     */
    dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollision getLicenseCollisions(int index);
    /**
     * <pre>
     * The license collisions
     * </pre>
     *
     * <code>repeated .dependencyCrawler.LicenseCollision licenseCollisions = 1;</code>
     */
    int getLicenseCollisionsCount();
    /**
     * <pre>
     * The license collisions
     * </pre>
     *
     * <code>repeated .dependencyCrawler.LicenseCollision licenseCollisions = 1;</code>
     */
    java.util.List<? extends dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollisionOrBuilder> 
        getLicenseCollisionsOrBuilderList();
    /**
     * <pre>
     * The license collisions
     * </pre>
     *
     * <code>repeated .dependencyCrawler.LicenseCollision licenseCollisions = 1;</code>
     */
    dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollisionOrBuilder getLicenseCollisionsOrBuilder(
        int index);

    /**
     * <pre>
     * Creation date
     * </pre>
     *
     * <code>.google.protobuf.Timestamp creationDate = 2;</code>
     * @return Whether the creationDate field is set.
     */
    boolean hasCreationDate();
    /**
     * <pre>
     * Creation date
     * </pre>
     *
     * <code>.google.protobuf.Timestamp creationDate = 2;</code>
     * @return The creationDate.
     */
    com.google.protobuf.Timestamp getCreationDate();
    /**
     * <pre>
     * Creation date
     * </pre>
     *
     * <code>.google.protobuf.Timestamp creationDate = 2;</code>
     */
    com.google.protobuf.TimestampOrBuilder getCreationDateOrBuilder();

    /**
     * <pre>
     * The purl of the application
     * </pre>
     *
     * <code>string applicationPurl = 3;</code>
     * @return The applicationPurl.
     */
    java.lang.String getApplicationPurl();
    /**
     * <pre>
     * The purl of the application
     * </pre>
     *
     * <code>string applicationPurl = 3;</code>
     * @return The bytes for applicationPurl.
     */
    com.google.protobuf.ByteString
        getApplicationPurlBytes();
  }
  /**
   * Protobuf type {@code dependencyCrawler.LicenseCollisionOutput}
   */
  public static final class LicenseCollisionOutput extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:dependencyCrawler.LicenseCollisionOutput)
      LicenseCollisionOutputOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 27,
        /* patch= */ 0,
        /* suffix= */ "-rc1",
        LicenseCollisionOutput.class.getName());
    }
    // Use LicenseCollisionOutput.newBuilder() to construct.
    private LicenseCollisionOutput(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private LicenseCollisionOutput() {
      licenseCollisions_ = java.util.Collections.emptyList();
      applicationPurl_ = "";
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return dependencyCrawler.LicenseCollisionOutputOuterClass.internal_static_dependencyCrawler_LicenseCollisionOutput_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return dependencyCrawler.LicenseCollisionOutputOuterClass.internal_static_dependencyCrawler_LicenseCollisionOutput_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollisionOutput.class, dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollisionOutput.Builder.class);
    }

    private int bitField0_;
    public static final int LICENSECOLLISIONS_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollision> licenseCollisions_;
    /**
     * <pre>
     * The license collisions
     * </pre>
     *
     * <code>repeated .dependencyCrawler.LicenseCollision licenseCollisions = 1;</code>
     */
    @java.lang.Override
    public java.util.List<dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollision> getLicenseCollisionsList() {
      return licenseCollisions_;
    }
    /**
     * <pre>
     * The license collisions
     * </pre>
     *
     * <code>repeated .dependencyCrawler.LicenseCollision licenseCollisions = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollisionOrBuilder> 
        getLicenseCollisionsOrBuilderList() {
      return licenseCollisions_;
    }
    /**
     * <pre>
     * The license collisions
     * </pre>
     *
     * <code>repeated .dependencyCrawler.LicenseCollision licenseCollisions = 1;</code>
     */
    @java.lang.Override
    public int getLicenseCollisionsCount() {
      return licenseCollisions_.size();
    }
    /**
     * <pre>
     * The license collisions
     * </pre>
     *
     * <code>repeated .dependencyCrawler.LicenseCollision licenseCollisions = 1;</code>
     */
    @java.lang.Override
    public dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollision getLicenseCollisions(int index) {
      return licenseCollisions_.get(index);
    }
    /**
     * <pre>
     * The license collisions
     * </pre>
     *
     * <code>repeated .dependencyCrawler.LicenseCollision licenseCollisions = 1;</code>
     */
    @java.lang.Override
    public dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollisionOrBuilder getLicenseCollisionsOrBuilder(
        int index) {
      return licenseCollisions_.get(index);
    }

    public static final int CREATIONDATE_FIELD_NUMBER = 2;
    private com.google.protobuf.Timestamp creationDate_;
    /**
     * <pre>
     * Creation date
     * </pre>
     *
     * <code>.google.protobuf.Timestamp creationDate = 2;</code>
     * @return Whether the creationDate field is set.
     */
    @java.lang.Override
    public boolean hasCreationDate() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Creation date
     * </pre>
     *
     * <code>.google.protobuf.Timestamp creationDate = 2;</code>
     * @return The creationDate.
     */
    @java.lang.Override
    public com.google.protobuf.Timestamp getCreationDate() {
      return creationDate_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : creationDate_;
    }
    /**
     * <pre>
     * Creation date
     * </pre>
     *
     * <code>.google.protobuf.Timestamp creationDate = 2;</code>
     */
    @java.lang.Override
    public com.google.protobuf.TimestampOrBuilder getCreationDateOrBuilder() {
      return creationDate_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : creationDate_;
    }

    public static final int APPLICATIONPURL_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private volatile java.lang.Object applicationPurl_ = "";
    /**
     * <pre>
     * The purl of the application
     * </pre>
     *
     * <code>string applicationPurl = 3;</code>
     * @return The applicationPurl.
     */
    @java.lang.Override
    public java.lang.String getApplicationPurl() {
      java.lang.Object ref = applicationPurl_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        applicationPurl_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The purl of the application
     * </pre>
     *
     * <code>string applicationPurl = 3;</code>
     * @return The bytes for applicationPurl.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getApplicationPurlBytes() {
      java.lang.Object ref = applicationPurl_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        applicationPurl_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < licenseCollisions_.size(); i++) {
        output.writeMessage(1, licenseCollisions_.get(i));
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(2, getCreationDate());
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(applicationPurl_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 3, applicationPurl_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < licenseCollisions_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, licenseCollisions_.get(i));
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getCreationDate());
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(applicationPurl_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(3, applicationPurl_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollisionOutput)) {
        return super.equals(obj);
      }
      dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollisionOutput other = (dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollisionOutput) obj;

      if (!getLicenseCollisionsList()
          .equals(other.getLicenseCollisionsList())) return false;
      if (hasCreationDate() != other.hasCreationDate()) return false;
      if (hasCreationDate()) {
        if (!getCreationDate()
            .equals(other.getCreationDate())) return false;
      }
      if (!getApplicationPurl()
          .equals(other.getApplicationPurl())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getLicenseCollisionsCount() > 0) {
        hash = (37 * hash) + LICENSECOLLISIONS_FIELD_NUMBER;
        hash = (53 * hash) + getLicenseCollisionsList().hashCode();
      }
      if (hasCreationDate()) {
        hash = (37 * hash) + CREATIONDATE_FIELD_NUMBER;
        hash = (53 * hash) + getCreationDate().hashCode();
      }
      hash = (37 * hash) + APPLICATIONPURL_FIELD_NUMBER;
      hash = (53 * hash) + getApplicationPurl().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollisionOutput parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollisionOutput parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollisionOutput parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollisionOutput parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollisionOutput parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollisionOutput parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollisionOutput parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollisionOutput parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollisionOutput parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollisionOutput parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollisionOutput parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollisionOutput parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollisionOutput prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dependencyCrawler.LicenseCollisionOutput}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dependencyCrawler.LicenseCollisionOutput)
        dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollisionOutputOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return dependencyCrawler.LicenseCollisionOutputOuterClass.internal_static_dependencyCrawler_LicenseCollisionOutput_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return dependencyCrawler.LicenseCollisionOutputOuterClass.internal_static_dependencyCrawler_LicenseCollisionOutput_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollisionOutput.class, dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollisionOutput.Builder.class);
      }

      // Construct using dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollisionOutput.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage
                .alwaysUseFieldBuilders) {
          getLicenseCollisionsFieldBuilder();
          getCreationDateFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (licenseCollisionsBuilder_ == null) {
          licenseCollisions_ = java.util.Collections.emptyList();
        } else {
          licenseCollisions_ = null;
          licenseCollisionsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        creationDate_ = null;
        if (creationDateBuilder_ != null) {
          creationDateBuilder_.dispose();
          creationDateBuilder_ = null;
        }
        applicationPurl_ = "";
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return dependencyCrawler.LicenseCollisionOutputOuterClass.internal_static_dependencyCrawler_LicenseCollisionOutput_descriptor;
      }

      @java.lang.Override
      public dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollisionOutput getDefaultInstanceForType() {
        return dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollisionOutput.getDefaultInstance();
      }

      @java.lang.Override
      public dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollisionOutput build() {
        dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollisionOutput result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollisionOutput buildPartial() {
        dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollisionOutput result = new dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollisionOutput(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollisionOutput result) {
        if (licenseCollisionsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            licenseCollisions_ = java.util.Collections.unmodifiableList(licenseCollisions_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.licenseCollisions_ = licenseCollisions_;
        } else {
          result.licenseCollisions_ = licenseCollisionsBuilder_.build();
        }
      }

      private void buildPartial0(dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollisionOutput result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.creationDate_ = creationDateBuilder_ == null
              ? creationDate_
              : creationDateBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.applicationPurl_ = applicationPurl_;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollisionOutput) {
          return mergeFrom((dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollisionOutput)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollisionOutput other) {
        if (other == dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollisionOutput.getDefaultInstance()) return this;
        if (licenseCollisionsBuilder_ == null) {
          if (!other.licenseCollisions_.isEmpty()) {
            if (licenseCollisions_.isEmpty()) {
              licenseCollisions_ = other.licenseCollisions_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureLicenseCollisionsIsMutable();
              licenseCollisions_.addAll(other.licenseCollisions_);
            }
            onChanged();
          }
        } else {
          if (!other.licenseCollisions_.isEmpty()) {
            if (licenseCollisionsBuilder_.isEmpty()) {
              licenseCollisionsBuilder_.dispose();
              licenseCollisionsBuilder_ = null;
              licenseCollisions_ = other.licenseCollisions_;
              bitField0_ = (bitField0_ & ~0x00000001);
              licenseCollisionsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getLicenseCollisionsFieldBuilder() : null;
            } else {
              licenseCollisionsBuilder_.addAllMessages(other.licenseCollisions_);
            }
          }
        }
        if (other.hasCreationDate()) {
          mergeCreationDate(other.getCreationDate());
        }
        if (!other.getApplicationPurl().isEmpty()) {
          applicationPurl_ = other.applicationPurl_;
          bitField0_ |= 0x00000004;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollision m =
                    input.readMessage(
                        dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollision.parser(),
                        extensionRegistry);
                if (licenseCollisionsBuilder_ == null) {
                  ensureLicenseCollisionsIsMutable();
                  licenseCollisions_.add(m);
                } else {
                  licenseCollisionsBuilder_.addMessage(m);
                }
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getCreationDateFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                applicationPurl_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollision> licenseCollisions_ =
        java.util.Collections.emptyList();
      private void ensureLicenseCollisionsIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          licenseCollisions_ = new java.util.ArrayList<dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollision>(licenseCollisions_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollision, dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollision.Builder, dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollisionOrBuilder> licenseCollisionsBuilder_;

      /**
       * <pre>
       * The license collisions
       * </pre>
       *
       * <code>repeated .dependencyCrawler.LicenseCollision licenseCollisions = 1;</code>
       */
      public java.util.List<dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollision> getLicenseCollisionsList() {
        if (licenseCollisionsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(licenseCollisions_);
        } else {
          return licenseCollisionsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * The license collisions
       * </pre>
       *
       * <code>repeated .dependencyCrawler.LicenseCollision licenseCollisions = 1;</code>
       */
      public int getLicenseCollisionsCount() {
        if (licenseCollisionsBuilder_ == null) {
          return licenseCollisions_.size();
        } else {
          return licenseCollisionsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * The license collisions
       * </pre>
       *
       * <code>repeated .dependencyCrawler.LicenseCollision licenseCollisions = 1;</code>
       */
      public dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollision getLicenseCollisions(int index) {
        if (licenseCollisionsBuilder_ == null) {
          return licenseCollisions_.get(index);
        } else {
          return licenseCollisionsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * The license collisions
       * </pre>
       *
       * <code>repeated .dependencyCrawler.LicenseCollision licenseCollisions = 1;</code>
       */
      public Builder setLicenseCollisions(
          int index, dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollision value) {
        if (licenseCollisionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLicenseCollisionsIsMutable();
          licenseCollisions_.set(index, value);
          onChanged();
        } else {
          licenseCollisionsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The license collisions
       * </pre>
       *
       * <code>repeated .dependencyCrawler.LicenseCollision licenseCollisions = 1;</code>
       */
      public Builder setLicenseCollisions(
          int index, dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollision.Builder builderForValue) {
        if (licenseCollisionsBuilder_ == null) {
          ensureLicenseCollisionsIsMutable();
          licenseCollisions_.set(index, builderForValue.build());
          onChanged();
        } else {
          licenseCollisionsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The license collisions
       * </pre>
       *
       * <code>repeated .dependencyCrawler.LicenseCollision licenseCollisions = 1;</code>
       */
      public Builder addLicenseCollisions(dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollision value) {
        if (licenseCollisionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLicenseCollisionsIsMutable();
          licenseCollisions_.add(value);
          onChanged();
        } else {
          licenseCollisionsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * The license collisions
       * </pre>
       *
       * <code>repeated .dependencyCrawler.LicenseCollision licenseCollisions = 1;</code>
       */
      public Builder addLicenseCollisions(
          int index, dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollision value) {
        if (licenseCollisionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLicenseCollisionsIsMutable();
          licenseCollisions_.add(index, value);
          onChanged();
        } else {
          licenseCollisionsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The license collisions
       * </pre>
       *
       * <code>repeated .dependencyCrawler.LicenseCollision licenseCollisions = 1;</code>
       */
      public Builder addLicenseCollisions(
          dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollision.Builder builderForValue) {
        if (licenseCollisionsBuilder_ == null) {
          ensureLicenseCollisionsIsMutable();
          licenseCollisions_.add(builderForValue.build());
          onChanged();
        } else {
          licenseCollisionsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The license collisions
       * </pre>
       *
       * <code>repeated .dependencyCrawler.LicenseCollision licenseCollisions = 1;</code>
       */
      public Builder addLicenseCollisions(
          int index, dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollision.Builder builderForValue) {
        if (licenseCollisionsBuilder_ == null) {
          ensureLicenseCollisionsIsMutable();
          licenseCollisions_.add(index, builderForValue.build());
          onChanged();
        } else {
          licenseCollisionsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The license collisions
       * </pre>
       *
       * <code>repeated .dependencyCrawler.LicenseCollision licenseCollisions = 1;</code>
       */
      public Builder addAllLicenseCollisions(
          java.lang.Iterable<? extends dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollision> values) {
        if (licenseCollisionsBuilder_ == null) {
          ensureLicenseCollisionsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, licenseCollisions_);
          onChanged();
        } else {
          licenseCollisionsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * The license collisions
       * </pre>
       *
       * <code>repeated .dependencyCrawler.LicenseCollision licenseCollisions = 1;</code>
       */
      public Builder clearLicenseCollisions() {
        if (licenseCollisionsBuilder_ == null) {
          licenseCollisions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          licenseCollisionsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * The license collisions
       * </pre>
       *
       * <code>repeated .dependencyCrawler.LicenseCollision licenseCollisions = 1;</code>
       */
      public Builder removeLicenseCollisions(int index) {
        if (licenseCollisionsBuilder_ == null) {
          ensureLicenseCollisionsIsMutable();
          licenseCollisions_.remove(index);
          onChanged();
        } else {
          licenseCollisionsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * The license collisions
       * </pre>
       *
       * <code>repeated .dependencyCrawler.LicenseCollision licenseCollisions = 1;</code>
       */
      public dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollision.Builder getLicenseCollisionsBuilder(
          int index) {
        return getLicenseCollisionsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * The license collisions
       * </pre>
       *
       * <code>repeated .dependencyCrawler.LicenseCollision licenseCollisions = 1;</code>
       */
      public dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollisionOrBuilder getLicenseCollisionsOrBuilder(
          int index) {
        if (licenseCollisionsBuilder_ == null) {
          return licenseCollisions_.get(index);  } else {
          return licenseCollisionsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * The license collisions
       * </pre>
       *
       * <code>repeated .dependencyCrawler.LicenseCollision licenseCollisions = 1;</code>
       */
      public java.util.List<? extends dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollisionOrBuilder> 
           getLicenseCollisionsOrBuilderList() {
        if (licenseCollisionsBuilder_ != null) {
          return licenseCollisionsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(licenseCollisions_);
        }
      }
      /**
       * <pre>
       * The license collisions
       * </pre>
       *
       * <code>repeated .dependencyCrawler.LicenseCollision licenseCollisions = 1;</code>
       */
      public dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollision.Builder addLicenseCollisionsBuilder() {
        return getLicenseCollisionsFieldBuilder().addBuilder(
            dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollision.getDefaultInstance());
      }
      /**
       * <pre>
       * The license collisions
       * </pre>
       *
       * <code>repeated .dependencyCrawler.LicenseCollision licenseCollisions = 1;</code>
       */
      public dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollision.Builder addLicenseCollisionsBuilder(
          int index) {
        return getLicenseCollisionsFieldBuilder().addBuilder(
            index, dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollision.getDefaultInstance());
      }
      /**
       * <pre>
       * The license collisions
       * </pre>
       *
       * <code>repeated .dependencyCrawler.LicenseCollision licenseCollisions = 1;</code>
       */
      public java.util.List<dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollision.Builder> 
           getLicenseCollisionsBuilderList() {
        return getLicenseCollisionsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollision, dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollision.Builder, dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollisionOrBuilder> 
          getLicenseCollisionsFieldBuilder() {
        if (licenseCollisionsBuilder_ == null) {
          licenseCollisionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollision, dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollision.Builder, dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollisionOrBuilder>(
                  licenseCollisions_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          licenseCollisions_ = null;
        }
        return licenseCollisionsBuilder_;
      }

      private com.google.protobuf.Timestamp creationDate_;
      private com.google.protobuf.SingleFieldBuilder<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> creationDateBuilder_;
      /**
       * <pre>
       * Creation date
       * </pre>
       *
       * <code>.google.protobuf.Timestamp creationDate = 2;</code>
       * @return Whether the creationDate field is set.
       */
      public boolean hasCreationDate() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * Creation date
       * </pre>
       *
       * <code>.google.protobuf.Timestamp creationDate = 2;</code>
       * @return The creationDate.
       */
      public com.google.protobuf.Timestamp getCreationDate() {
        if (creationDateBuilder_ == null) {
          return creationDate_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : creationDate_;
        } else {
          return creationDateBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Creation date
       * </pre>
       *
       * <code>.google.protobuf.Timestamp creationDate = 2;</code>
       */
      public Builder setCreationDate(com.google.protobuf.Timestamp value) {
        if (creationDateBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          creationDate_ = value;
        } else {
          creationDateBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Creation date
       * </pre>
       *
       * <code>.google.protobuf.Timestamp creationDate = 2;</code>
       */
      public Builder setCreationDate(
          com.google.protobuf.Timestamp.Builder builderForValue) {
        if (creationDateBuilder_ == null) {
          creationDate_ = builderForValue.build();
        } else {
          creationDateBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Creation date
       * </pre>
       *
       * <code>.google.protobuf.Timestamp creationDate = 2;</code>
       */
      public Builder mergeCreationDate(com.google.protobuf.Timestamp value) {
        if (creationDateBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            creationDate_ != null &&
            creationDate_ != com.google.protobuf.Timestamp.getDefaultInstance()) {
            getCreationDateBuilder().mergeFrom(value);
          } else {
            creationDate_ = value;
          }
        } else {
          creationDateBuilder_.mergeFrom(value);
        }
        if (creationDate_ != null) {
          bitField0_ |= 0x00000002;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * Creation date
       * </pre>
       *
       * <code>.google.protobuf.Timestamp creationDate = 2;</code>
       */
      public Builder clearCreationDate() {
        bitField0_ = (bitField0_ & ~0x00000002);
        creationDate_ = null;
        if (creationDateBuilder_ != null) {
          creationDateBuilder_.dispose();
          creationDateBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Creation date
       * </pre>
       *
       * <code>.google.protobuf.Timestamp creationDate = 2;</code>
       */
      public com.google.protobuf.Timestamp.Builder getCreationDateBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getCreationDateFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Creation date
       * </pre>
       *
       * <code>.google.protobuf.Timestamp creationDate = 2;</code>
       */
      public com.google.protobuf.TimestampOrBuilder getCreationDateOrBuilder() {
        if (creationDateBuilder_ != null) {
          return creationDateBuilder_.getMessageOrBuilder();
        } else {
          return creationDate_ == null ?
              com.google.protobuf.Timestamp.getDefaultInstance() : creationDate_;
        }
      }
      /**
       * <pre>
       * Creation date
       * </pre>
       *
       * <code>.google.protobuf.Timestamp creationDate = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
          getCreationDateFieldBuilder() {
        if (creationDateBuilder_ == null) {
          creationDateBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                  getCreationDate(),
                  getParentForChildren(),
                  isClean());
          creationDate_ = null;
        }
        return creationDateBuilder_;
      }

      private java.lang.Object applicationPurl_ = "";
      /**
       * <pre>
       * The purl of the application
       * </pre>
       *
       * <code>string applicationPurl = 3;</code>
       * @return The applicationPurl.
       */
      public java.lang.String getApplicationPurl() {
        java.lang.Object ref = applicationPurl_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          applicationPurl_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The purl of the application
       * </pre>
       *
       * <code>string applicationPurl = 3;</code>
       * @return The bytes for applicationPurl.
       */
      public com.google.protobuf.ByteString
          getApplicationPurlBytes() {
        java.lang.Object ref = applicationPurl_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          applicationPurl_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The purl of the application
       * </pre>
       *
       * <code>string applicationPurl = 3;</code>
       * @param value The applicationPurl to set.
       * @return This builder for chaining.
       */
      public Builder setApplicationPurl(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        applicationPurl_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The purl of the application
       * </pre>
       *
       * <code>string applicationPurl = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearApplicationPurl() {
        applicationPurl_ = getDefaultInstance().getApplicationPurl();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The purl of the application
       * </pre>
       *
       * <code>string applicationPurl = 3;</code>
       * @param value The bytes for applicationPurl to set.
       * @return This builder for chaining.
       */
      public Builder setApplicationPurlBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        applicationPurl_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:dependencyCrawler.LicenseCollisionOutput)
    }

    // @@protoc_insertion_point(class_scope:dependencyCrawler.LicenseCollisionOutput)
    private static final dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollisionOutput DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollisionOutput();
    }

    public static dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollisionOutput getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<LicenseCollisionOutput>
        PARSER = new com.google.protobuf.AbstractParser<LicenseCollisionOutput>() {
      @java.lang.Override
      public LicenseCollisionOutput parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<LicenseCollisionOutput> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<LicenseCollisionOutput> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollisionOutput getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface LicenseCollisionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dependencyCrawler.LicenseCollision)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The purl of the parent component
     * </pre>
     *
     * <code>string parentPurl = 1;</code>
     * @return The parentPurl.
     */
    java.lang.String getParentPurl();
    /**
     * <pre>
     * The purl of the parent component
     * </pre>
     *
     * <code>string parentPurl = 1;</code>
     * @return The bytes for parentPurl.
     */
    com.google.protobuf.ByteString
        getParentPurlBytes();

    /**
     * <pre>
     * The purl of the child component
     * </pre>
     *
     * <code>string childPurl = 2;</code>
     * @return The childPurl.
     */
    java.lang.String getChildPurl();
    /**
     * <pre>
     * The purl of the child component
     * </pre>
     *
     * <code>string childPurl = 2;</code>
     * @return The bytes for childPurl.
     */
    com.google.protobuf.ByteString
        getChildPurlBytes();

    /**
     * <pre>
     * The license of the parent component
     * </pre>
     *
     * <code>string parentLicense = 3;</code>
     * @return The parentLicense.
     */
    java.lang.String getParentLicense();
    /**
     * <pre>
     * The license of the parent component
     * </pre>
     *
     * <code>string parentLicense = 3;</code>
     * @return The bytes for parentLicense.
     */
    com.google.protobuf.ByteString
        getParentLicenseBytes();

    /**
     * <pre>
     * The license of the child component
     * </pre>
     *
     * <code>string childLicense = 4;</code>
     * @return The childLicense.
     */
    java.lang.String getChildLicense();
    /**
     * <pre>
     * The license of the child component
     * </pre>
     *
     * <code>string childLicense = 4;</code>
     * @return The bytes for childLicense.
     */
    com.google.protobuf.ByteString
        getChildLicenseBytes();

    /**
     * <pre>
     * The cause
     * </pre>
     *
     * <code>optional string cause = 5;</code>
     * @return Whether the cause field is set.
     */
    boolean hasCause();
    /**
     * <pre>
     * The cause
     * </pre>
     *
     * <code>optional string cause = 5;</code>
     * @return The cause.
     */
    java.lang.String getCause();
    /**
     * <pre>
     * The cause
     * </pre>
     *
     * <code>optional string cause = 5;</code>
     * @return The bytes for cause.
     */
    com.google.protobuf.ByteString
        getCauseBytes();
  }
  /**
   * <pre>
   * A dependency of an application
   * </pre>
   *
   * Protobuf type {@code dependencyCrawler.LicenseCollision}
   */
  public static final class LicenseCollision extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:dependencyCrawler.LicenseCollision)
      LicenseCollisionOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 27,
        /* patch= */ 0,
        /* suffix= */ "-rc1",
        LicenseCollision.class.getName());
    }
    // Use LicenseCollision.newBuilder() to construct.
    private LicenseCollision(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private LicenseCollision() {
      parentPurl_ = "";
      childPurl_ = "";
      parentLicense_ = "";
      childLicense_ = "";
      cause_ = "";
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return dependencyCrawler.LicenseCollisionOutputOuterClass.internal_static_dependencyCrawler_LicenseCollision_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return dependencyCrawler.LicenseCollisionOutputOuterClass.internal_static_dependencyCrawler_LicenseCollision_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollision.class, dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollision.Builder.class);
    }

    private int bitField0_;
    public static final int PARENTPURL_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private volatile java.lang.Object parentPurl_ = "";
    /**
     * <pre>
     * The purl of the parent component
     * </pre>
     *
     * <code>string parentPurl = 1;</code>
     * @return The parentPurl.
     */
    @java.lang.Override
    public java.lang.String getParentPurl() {
      java.lang.Object ref = parentPurl_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        parentPurl_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The purl of the parent component
     * </pre>
     *
     * <code>string parentPurl = 1;</code>
     * @return The bytes for parentPurl.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getParentPurlBytes() {
      java.lang.Object ref = parentPurl_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        parentPurl_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CHILDPURL_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private volatile java.lang.Object childPurl_ = "";
    /**
     * <pre>
     * The purl of the child component
     * </pre>
     *
     * <code>string childPurl = 2;</code>
     * @return The childPurl.
     */
    @java.lang.Override
    public java.lang.String getChildPurl() {
      java.lang.Object ref = childPurl_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        childPurl_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The purl of the child component
     * </pre>
     *
     * <code>string childPurl = 2;</code>
     * @return The bytes for childPurl.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getChildPurlBytes() {
      java.lang.Object ref = childPurl_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        childPurl_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PARENTLICENSE_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private volatile java.lang.Object parentLicense_ = "";
    /**
     * <pre>
     * The license of the parent component
     * </pre>
     *
     * <code>string parentLicense = 3;</code>
     * @return The parentLicense.
     */
    @java.lang.Override
    public java.lang.String getParentLicense() {
      java.lang.Object ref = parentLicense_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        parentLicense_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The license of the parent component
     * </pre>
     *
     * <code>string parentLicense = 3;</code>
     * @return The bytes for parentLicense.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getParentLicenseBytes() {
      java.lang.Object ref = parentLicense_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        parentLicense_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CHILDLICENSE_FIELD_NUMBER = 4;
    @SuppressWarnings("serial")
    private volatile java.lang.Object childLicense_ = "";
    /**
     * <pre>
     * The license of the child component
     * </pre>
     *
     * <code>string childLicense = 4;</code>
     * @return The childLicense.
     */
    @java.lang.Override
    public java.lang.String getChildLicense() {
      java.lang.Object ref = childLicense_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        childLicense_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The license of the child component
     * </pre>
     *
     * <code>string childLicense = 4;</code>
     * @return The bytes for childLicense.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getChildLicenseBytes() {
      java.lang.Object ref = childLicense_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        childLicense_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CAUSE_FIELD_NUMBER = 5;
    @SuppressWarnings("serial")
    private volatile java.lang.Object cause_ = "";
    /**
     * <pre>
     * The cause
     * </pre>
     *
     * <code>optional string cause = 5;</code>
     * @return Whether the cause field is set.
     */
    @java.lang.Override
    public boolean hasCause() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * The cause
     * </pre>
     *
     * <code>optional string cause = 5;</code>
     * @return The cause.
     */
    @java.lang.Override
    public java.lang.String getCause() {
      java.lang.Object ref = cause_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        cause_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The cause
     * </pre>
     *
     * <code>optional string cause = 5;</code>
     * @return The bytes for cause.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getCauseBytes() {
      java.lang.Object ref = cause_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        cause_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(parentPurl_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 1, parentPurl_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(childPurl_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 2, childPurl_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(parentLicense_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 3, parentLicense_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(childLicense_)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 4, childLicense_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessage.writeString(output, 5, cause_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(parentPurl_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(1, parentPurl_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(childPurl_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(2, childPurl_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(parentLicense_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(3, parentLicense_);
      }
      if (!com.google.protobuf.GeneratedMessage.isStringEmpty(childLicense_)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(4, childLicense_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessage.computeStringSize(5, cause_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollision)) {
        return super.equals(obj);
      }
      dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollision other = (dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollision) obj;

      if (!getParentPurl()
          .equals(other.getParentPurl())) return false;
      if (!getChildPurl()
          .equals(other.getChildPurl())) return false;
      if (!getParentLicense()
          .equals(other.getParentLicense())) return false;
      if (!getChildLicense()
          .equals(other.getChildLicense())) return false;
      if (hasCause() != other.hasCause()) return false;
      if (hasCause()) {
        if (!getCause()
            .equals(other.getCause())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + PARENTPURL_FIELD_NUMBER;
      hash = (53 * hash) + getParentPurl().hashCode();
      hash = (37 * hash) + CHILDPURL_FIELD_NUMBER;
      hash = (53 * hash) + getChildPurl().hashCode();
      hash = (37 * hash) + PARENTLICENSE_FIELD_NUMBER;
      hash = (53 * hash) + getParentLicense().hashCode();
      hash = (37 * hash) + CHILDLICENSE_FIELD_NUMBER;
      hash = (53 * hash) + getChildLicense().hashCode();
      if (hasCause()) {
        hash = (37 * hash) + CAUSE_FIELD_NUMBER;
        hash = (53 * hash) + getCause().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollision parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollision parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollision parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollision parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollision parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollision parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollision parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollision parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollision parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollision parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollision parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollision parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollision prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A dependency of an application
     * </pre>
     *
     * Protobuf type {@code dependencyCrawler.LicenseCollision}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dependencyCrawler.LicenseCollision)
        dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollisionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return dependencyCrawler.LicenseCollisionOutputOuterClass.internal_static_dependencyCrawler_LicenseCollision_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return dependencyCrawler.LicenseCollisionOutputOuterClass.internal_static_dependencyCrawler_LicenseCollision_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollision.class, dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollision.Builder.class);
      }

      // Construct using dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollision.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        parentPurl_ = "";
        childPurl_ = "";
        parentLicense_ = "";
        childLicense_ = "";
        cause_ = "";
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return dependencyCrawler.LicenseCollisionOutputOuterClass.internal_static_dependencyCrawler_LicenseCollision_descriptor;
      }

      @java.lang.Override
      public dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollision getDefaultInstanceForType() {
        return dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollision.getDefaultInstance();
      }

      @java.lang.Override
      public dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollision build() {
        dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollision result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollision buildPartial() {
        dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollision result = new dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollision(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollision result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.parentPurl_ = parentPurl_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.childPurl_ = childPurl_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.parentLicense_ = parentLicense_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.childLicense_ = childLicense_;
        }
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.cause_ = cause_;
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollision) {
          return mergeFrom((dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollision)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollision other) {
        if (other == dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollision.getDefaultInstance()) return this;
        if (!other.getParentPurl().isEmpty()) {
          parentPurl_ = other.parentPurl_;
          bitField0_ |= 0x00000001;
          onChanged();
        }
        if (!other.getChildPurl().isEmpty()) {
          childPurl_ = other.childPurl_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        if (!other.getParentLicense().isEmpty()) {
          parentLicense_ = other.parentLicense_;
          bitField0_ |= 0x00000004;
          onChanged();
        }
        if (!other.getChildLicense().isEmpty()) {
          childLicense_ = other.childLicense_;
          bitField0_ |= 0x00000008;
          onChanged();
        }
        if (other.hasCause()) {
          cause_ = other.cause_;
          bitField0_ |= 0x00000010;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                parentPurl_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                childPurl_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                parentLicense_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              case 34: {
                childLicense_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000008;
                break;
              } // case 34
              case 42: {
                cause_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000010;
                break;
              } // case 42
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.lang.Object parentPurl_ = "";
      /**
       * <pre>
       * The purl of the parent component
       * </pre>
       *
       * <code>string parentPurl = 1;</code>
       * @return The parentPurl.
       */
      public java.lang.String getParentPurl() {
        java.lang.Object ref = parentPurl_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          parentPurl_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The purl of the parent component
       * </pre>
       *
       * <code>string parentPurl = 1;</code>
       * @return The bytes for parentPurl.
       */
      public com.google.protobuf.ByteString
          getParentPurlBytes() {
        java.lang.Object ref = parentPurl_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          parentPurl_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The purl of the parent component
       * </pre>
       *
       * <code>string parentPurl = 1;</code>
       * @param value The parentPurl to set.
       * @return This builder for chaining.
       */
      public Builder setParentPurl(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        parentPurl_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The purl of the parent component
       * </pre>
       *
       * <code>string parentPurl = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearParentPurl() {
        parentPurl_ = getDefaultInstance().getParentPurl();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The purl of the parent component
       * </pre>
       *
       * <code>string parentPurl = 1;</code>
       * @param value The bytes for parentPurl to set.
       * @return This builder for chaining.
       */
      public Builder setParentPurlBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        parentPurl_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }

      private java.lang.Object childPurl_ = "";
      /**
       * <pre>
       * The purl of the child component
       * </pre>
       *
       * <code>string childPurl = 2;</code>
       * @return The childPurl.
       */
      public java.lang.String getChildPurl() {
        java.lang.Object ref = childPurl_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          childPurl_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The purl of the child component
       * </pre>
       *
       * <code>string childPurl = 2;</code>
       * @return The bytes for childPurl.
       */
      public com.google.protobuf.ByteString
          getChildPurlBytes() {
        java.lang.Object ref = childPurl_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          childPurl_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The purl of the child component
       * </pre>
       *
       * <code>string childPurl = 2;</code>
       * @param value The childPurl to set.
       * @return This builder for chaining.
       */
      public Builder setChildPurl(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        childPurl_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The purl of the child component
       * </pre>
       *
       * <code>string childPurl = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearChildPurl() {
        childPurl_ = getDefaultInstance().getChildPurl();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The purl of the child component
       * </pre>
       *
       * <code>string childPurl = 2;</code>
       * @param value The bytes for childPurl to set.
       * @return This builder for chaining.
       */
      public Builder setChildPurlBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        childPurl_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      private java.lang.Object parentLicense_ = "";
      /**
       * <pre>
       * The license of the parent component
       * </pre>
       *
       * <code>string parentLicense = 3;</code>
       * @return The parentLicense.
       */
      public java.lang.String getParentLicense() {
        java.lang.Object ref = parentLicense_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          parentLicense_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The license of the parent component
       * </pre>
       *
       * <code>string parentLicense = 3;</code>
       * @return The bytes for parentLicense.
       */
      public com.google.protobuf.ByteString
          getParentLicenseBytes() {
        java.lang.Object ref = parentLicense_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          parentLicense_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The license of the parent component
       * </pre>
       *
       * <code>string parentLicense = 3;</code>
       * @param value The parentLicense to set.
       * @return This builder for chaining.
       */
      public Builder setParentLicense(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        parentLicense_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The license of the parent component
       * </pre>
       *
       * <code>string parentLicense = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearParentLicense() {
        parentLicense_ = getDefaultInstance().getParentLicense();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The license of the parent component
       * </pre>
       *
       * <code>string parentLicense = 3;</code>
       * @param value The bytes for parentLicense to set.
       * @return This builder for chaining.
       */
      public Builder setParentLicenseBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        parentLicense_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }

      private java.lang.Object childLicense_ = "";
      /**
       * <pre>
       * The license of the child component
       * </pre>
       *
       * <code>string childLicense = 4;</code>
       * @return The childLicense.
       */
      public java.lang.String getChildLicense() {
        java.lang.Object ref = childLicense_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          childLicense_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The license of the child component
       * </pre>
       *
       * <code>string childLicense = 4;</code>
       * @return The bytes for childLicense.
       */
      public com.google.protobuf.ByteString
          getChildLicenseBytes() {
        java.lang.Object ref = childLicense_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          childLicense_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The license of the child component
       * </pre>
       *
       * <code>string childLicense = 4;</code>
       * @param value The childLicense to set.
       * @return This builder for chaining.
       */
      public Builder setChildLicense(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        childLicense_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The license of the child component
       * </pre>
       *
       * <code>string childLicense = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearChildLicense() {
        childLicense_ = getDefaultInstance().getChildLicense();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The license of the child component
       * </pre>
       *
       * <code>string childLicense = 4;</code>
       * @param value The bytes for childLicense to set.
       * @return This builder for chaining.
       */
      public Builder setChildLicenseBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        childLicense_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }

      private java.lang.Object cause_ = "";
      /**
       * <pre>
       * The cause
       * </pre>
       *
       * <code>optional string cause = 5;</code>
       * @return Whether the cause field is set.
       */
      public boolean hasCause() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       * The cause
       * </pre>
       *
       * <code>optional string cause = 5;</code>
       * @return The cause.
       */
      public java.lang.String getCause() {
        java.lang.Object ref = cause_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          cause_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The cause
       * </pre>
       *
       * <code>optional string cause = 5;</code>
       * @return The bytes for cause.
       */
      public com.google.protobuf.ByteString
          getCauseBytes() {
        java.lang.Object ref = cause_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          cause_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The cause
       * </pre>
       *
       * <code>optional string cause = 5;</code>
       * @param value The cause to set.
       * @return This builder for chaining.
       */
      public Builder setCause(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        cause_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The cause
       * </pre>
       *
       * <code>optional string cause = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearCause() {
        cause_ = getDefaultInstance().getCause();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The cause
       * </pre>
       *
       * <code>optional string cause = 5;</code>
       * @param value The bytes for cause to set.
       * @return This builder for chaining.
       */
      public Builder setCauseBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        cause_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:dependencyCrawler.LicenseCollision)
    }

    // @@protoc_insertion_point(class_scope:dependencyCrawler.LicenseCollision)
    private static final dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollision DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollision();
    }

    public static dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollision getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<LicenseCollision>
        PARSER = new com.google.protobuf.AbstractParser<LicenseCollision>() {
      @java.lang.Override
      public LicenseCollision parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<LicenseCollision> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<LicenseCollision> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public dependencyCrawler.LicenseCollisionOutputOuterClass.LicenseCollision getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dependencyCrawler_LicenseCollisionOutput_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dependencyCrawler_LicenseCollisionOutput_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dependencyCrawler_LicenseCollision_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_dependencyCrawler_LicenseCollision_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\036license-collision-output.proto\022\021depend" +
      "encyCrawler\032\037google/protobuf/timestamp.p" +
      "roto\"\243\001\n\026LicenseCollisionOutput\022>\n\021licen" +
      "seCollisions\030\001 \003(\0132#.dependencyCrawler.L" +
      "icenseCollision\0220\n\014creationDate\030\002 \001(\0132\032." +
      "google.protobuf.Timestamp\022\027\n\017application" +
      "Purl\030\003 \001(\t\"\204\001\n\020LicenseCollision\022\022\n\nparen" +
      "tPurl\030\001 \001(\t\022\021\n\tchildPurl\030\002 \001(\t\022\025\n\rparent" +
      "License\030\003 \001(\t\022\024\n\014childLicense\030\004 \001(\t\022\022\n\005c" +
      "ause\030\005 \001(\tH\000\210\001\001B\010\n\006_causeb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.protobuf.TimestampProto.getDescriptor(),
        });
    internal_static_dependencyCrawler_LicenseCollisionOutput_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_dependencyCrawler_LicenseCollisionOutput_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dependencyCrawler_LicenseCollisionOutput_descriptor,
        new java.lang.String[] { "LicenseCollisions", "CreationDate", "ApplicationPurl", });
    internal_static_dependencyCrawler_LicenseCollision_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_dependencyCrawler_LicenseCollision_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_dependencyCrawler_LicenseCollision_descriptor,
        new java.lang.String[] { "ParentPurl", "ChildPurl", "ParentLicense", "ChildLicense", "Cause", });
    descriptor.resolveAllFeaturesImmutable();
    com.google.protobuf.TimestampProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
